{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/core/vanilla/utils.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport {\n  LocationConfig, LocationServices, identity, unnestR, isArray, splitEqual, splitHash, splitQuery,\n} from '../common';\nimport { UIRouter } from '../router';\n\nexport const keyValsToObjectR = (accum, [key, val]) => {\n  if (!accum.hasOwnProperty(key)) {\n    accum[key] = val;\n  } else if (isArray(accum[key])) {\n    accum[key].push(val);\n  } else {\n    accum[key] = [accum[key], val];\n  }\n  return accum;\n};\n\nexport const getParams = (queryString: string): any =>\n    queryString.split('&').filter(identity).map(splitEqual).reduce(keyValsToObjectR, {});\n\nexport function parseUrl(url: string) {\n  const orEmptyString = x => x || '';\n  const [beforehash, hash] = splitHash(url).map(orEmptyString);\n  const [path, search] = splitQuery(beforehash).map(orEmptyString);\n\n  return { path, search, hash, url };\n}\n\nexport const buildUrl = (loc: LocationServices) => {\n  const path = loc.path();\n  const searchObject = loc.search();\n  const hash = loc.hash();\n\n  const search = Object.keys(searchObject).map(key => {\n    const param = searchObject[key];\n    const vals = isArray(param) ? param : [param];\n    return vals.map(val => key + '=' + val);\n  }).reduce(unnestR, []).join('&');\n\n  return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\n\nexport function locationPluginFactory(\n    name: string,\n    isHtml5: boolean,\n    serviceClass: { new(uiRouter?: UIRouter): LocationServices },\n    configurationClass: { new(uiRouter?: UIRouter, isHtml5?: boolean): LocationConfig },\n) {\n  return function(uiRouter: UIRouter) {\n    const service       = uiRouter.locationService = new serviceClass(uiRouter);\n    const configuration = uiRouter.locationConfig  = new configurationClass(uiRouter, isHtml5);\n\n    function dispose(router: UIRouter) {\n      router.dispose(service);\n      router.dispose(configuration);\n    }\n\n    return { name, service, configuration, dispose };\n  };\n}\n"
  ]
}